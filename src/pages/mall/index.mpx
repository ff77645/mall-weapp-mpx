<template>
  <van-nav-bar
    title="商城"
  />
  <view class="flex-1 bg-slate-100 flex flex-nowrap overflow-hidden">
    <!-- 商品分类 -->
    <scroll-view
      class="h-full w-24 flex-none"
      scroll-y
      scroll-with-animation
      scroll-into-view="a{{activeIndex}}"
    >
      <view
        wx:for="{{categoryList}}"
        wx:key="id"
        data-id="{{item.id}}"
        data-index="{{index}}"
        class="flex flex-nowrap border-l-4 border-solid {{ activeIndex === index ? 'bg-white border-red-500' : 'border-slate-50'}}"
        bind:tap="changeCategory"
        id="a{{index}}"
      >
        <view
          data-id="{{item.id}}"
          data-index="{{index}}"
          class="py-3 text-center flex-1"
        >{{item.title}}</view>
        <view wx:if="{{item.number}}" class="self-start h-4 px-1 flex items-center text-xs rounded-full text-white bg-red-600">{{item.number}}</view>
      </view>
    </scroll-view>

    <!-- 商品列表 -->
    <scroll-view
      class="h-full bg-white flex-1 group-list overflow-hidden"
      scroll-y
      scroll-with-animation
      scroll-into-view="{{group_id}}"
      bind:scroll="goodsListScroll"
    >
      <view
        class="group-item"
        wx:for="{{groupList}}"
        wx:key="id"
        wx:for-item="group"
        id="g{{group.id}}"
        data-id="{{group.id}}"
        data-index="{{index}}"
        data-title="{{group.title}}"
      >
        <view class="px-4 group">
          <!-- 分类标题 -->
          <view
            class="category-title text-sm text-gray-500 sticky top-0 bg-white" style="z-index: 100;"
            data-title="{{group.title}}"
            data-id="{{group.id}}"
          >{{group.title}}</view>
          <view
            wx:for="{{group.children}}"
            wx:for-index="idx"
            wx:key="idx"
            class="py-3 flex flex-nowrap items-center overflow-hidden"
            bind:tap="navToProductDetail"
          >
            <!-- 商品图片 -->
            <image
              src="http://pic.yupoo.com/isfy666/94184a1f/945dfe1e.jpeg"
              mode="aspectFill"
              style="width:80px;height:80px;"
              class="mr-3 rounded-md flex-none"
              lazy-load
            />
            <view class="flex-1 flex flex-col justify-between overflow-hidden self-stretch">
              <view>
                <view class=" text-gray-900 van-multi-ellipsis--l2">{{item.title}}</view>
                <view class="text-gray-600 text-sm van-ellipsis">{{item.describe}}</view>
                <view class="text-gray-500" style="font-size:10px;">已购1万</view>
              </view>
              <view class="text-red-500 font-bold text-sm">￥{{item.unit_price / 100}}</view>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
  </view>
</template>

<script>
import { createPage } from '@mpxjs/core'

createPage({
  data: {
    categoryList: [],
    groupList: [],
    group_id: '',
    activeIndex: 0,
    checkedGoods: [],
    checkedNumber: 0,
    priceSum: 0,
    showCheckedGoods: false,
    guides: [],
    showGuideModel: false,
    scrollTop: 0
  },
  // 单据
  _draftBill: {},
  // 节流时间
  throttleTime: 600,
  // 切换分类
  changeCategory({ target }) {
    const { index, id } = target.dataset
    this.setData({
      activeIndex: index,
      group_id: 'g' + id
    })
  },
  getScrollListTop() {
    this.createSelectorQuery()
      .select('.group-list')
      .boundingClientRect(res => {
        console.log('getScrollListTop', res)
        this.scrollListTop = res.top
      })
      .exec()
  },
  getCategoryTitleTop() {
    this.createSelectorQuery()
      .selectAll('.category-title')
      .boundingClientRect((res) => {
        console.log({ res })
        const { categoryList } = this.data
        categoryList.forEach((item, index) => {
          item.top = res[index].top - this.scrollListTop
          const next = res[index + 1]
          item.bottom = next ? (next.top - this.scrollListTop) : item.top + 20
        })
        this.setData({ categoryList })
      })
      .exec()
  },
  goodsListScroll({ detail }) {
    const index = this.data.categoryList.findIndex(i => {
      return detail.scrollTop >= i.top && detail.scrollTop < i.bottom
    })
    if (index === this.data.activeIndex) return
    this.setData({ activeIndex: index })
  },

  // 初始化分类与商品数据
  async initData() {
    // const [
    //   productCategory,
    //   productRes,
    //   packageCategory,
    //   packages,
    // ] = await Promise.all([
    //   getAllProductCategory(),
    //   getAllProduct({page:1,limit:1000}),
    //   packageCategoryApi.findAll(),
    //   packageApi.findAll({page:1,limit:100}),
    // ])
    // // console.log({packages,packageCategory});
    // console.log({productRes});

    // const categoryList = [...packageCategory,...productCategory]
    // categoryList.forEach(i=>{i.number = 0})

    // packages.data.forEach(i=>{
    //   i.type = 'package'
    //   i.groups = JSON.parse(i.groups)
    //   i.has_guide = i.groups.length && i.groups.some(i=>i.total !== i.optional)
    // })
    // const allProducts = [...packages.data,...productRes.data]
    // allProducts.forEach(i=>{
    //   i.unit_price = i.retail_price
    //   i.number = 0
    // })
    // const groupList = categoryList.map(item=>{
    //   return {
    //     title:item.title,
    //     id:item.id,
    //     children:allProducts.filter(i=>i.category_id === item.id)
    //   }
    // })
    // console.log({groupList});
    const categoryList = [
      {
        title: '跑跑鸡',
        id: 'ppj'
      },
      {
        title: '跳跳兔',
        id: 'ttt'
      },
      {
        title: '奔奔猪',
        id: 'bbz'
      }
    ]

    const groupList = categoryList.map(item => {
      return {
        title: item.title,
        id: item.id,
        children: Array.from({ length: 3 }).map((_, idx) => {
          return {
            id: item.id + idx,
            title: item.title + idx,
            unit_price: 1000 * idx,
            describe: 'describedescribedescribedescribedescribe'
          }
        })
      }
    })

    this.setData({
      groupList,
      categoryList
    }, () => {
      this.getCategoryTitleTop()
    })
  },

  onLoad() {
    this.initData()
    setTimeout(() => {
      // this.initAnimateOrder()
      this.getScrollListTop()
      // this.getCategoryTitleTop()
    }, 300)
  },
  navToProductDetail() {
    wx.navigateTo({
      url: '/pages/product-detail/index'
    })
  },
  navBack() {
    wx.navigateBack()
  }
})
</script>
