<template>
  <van-nav-bar
  title="{{navBarTitle}}"
  left-arrow
  bind:click-left="navBack"
/>
<scroll-view
  class="scrollable"
  scroll-y
>
  <view class="px-4 bg-white">
    <view class="py-4 flex items-center text-xs">
      <view class="text-xs w-20">收货人姓名</view>
      <input wx:model="{{user_name}}" class="flex-1" type="text" placeholder="请输入姓名"/>
    </view>
    <view class="py-4 flex items-center text-xs">
      <view class="text-xs w-20">联系电话</view>
      <input wx:model="{{phone_number}}" class="flex-1" type="text" placeholder="请输入电话"/>
    </view>
    <view class="py-4 flex items-center text-xs">
      <view class="text-xs w-20">所在地区</view>
      <view bind:tap="toggleLocationPopup" class="flex items-center justify-between flex-1">
        <input class="flex-1" value="{{location}}" type="text" disabled placeholder="省市区县乡镇等"/>
        <van-icon name="arrow" size="14" color="#666" />
      </view>
    </view>
    <view class="py-4 flex items-start text-xs">
      <view class="text-xs w-20">详情地址</view>
      <textarea wx:model="{{address}}" style="height:80px;" class="flex-1" type="text" placeholder="填写详细地址,不少于5个字"/>
    </view>
  </view>
  <view class="px-4 py-3 flex items-center justify-between bg-white mt-3">
    <view class="text-xs">设置默认地址</view>
    <van-switch bind:change="changeIsDefault" checked="{{ isDefault }}" size="20" active-color="#ee0a24" />
  </view>

</scroll-view>
<view class="px-4 py-1 bg-white">
  <van-button bind:tap="onSubmit" type="danger" block round disabled="{{!noDisabled}}">保存地址</van-button>
</view>

<!-- 区域选择 -->
<van-popup
  show="{{ showLocationPopup }}"
  position="bottom"
  round
  z-index="110"
  custom-style="max-height: 60%"
  bind:close="toggleLocationPopup"
>
  <view class="flex items-center justify-between p-4 van-hairline--bottom">
    <view></view>
    <view class="font-bold">所在区域</view>
    <view
      bind:tap="toggleLocationPopup"
      style="height:26px;width:26px;" class="rounded-full bg-slate-100 flex justify-center items-center"
    >
      <van-icon name="cross" size="16" color="#666" />
    </view>
  </view>
  <van-area
    value="{{areaCode}}"
    area-list="{{ areaList }}"
    show-toolbar="{{false}}"
    bind:change="selectAreaChange"
  />
  <view class="px-4 py-2 van-hairline--top bg-white">
    <van-button bind:click="selectAreaConfirm" type="danger" round block>确认</van-button>
  </view>
</van-popup>
</template>

<script>
import mpx, { computed, createPage, ref, onLoad } from '@mpxjs/core'
import { customerAddressApi } from '@/api/customer'
import { useBasicDataStore } from '@/store/base'
import { areaList } from '@vant/area-data'

createPage({
  setup() {
    const isDefault = ref(false)
    const showLocationPopup = ref(false)
    const basicData = useBasicDataStore()

    const user_name = ref('')
    const phone_number = ref('')
    const address = ref('')
    const location = ref('')
    let currentAddressId = ''

    const noDisabled = computed(() => {
      return user_name.value && phone_number.value && location.value && address.value.length > 4
    })

    const toggleLocationPopup = () => {
      showLocationPopup.value = !showLocationPopup.value
    }

    const changeIsDefault = () => {
      isDefault.value = !isDefault.value
    }

    let _areaCode = '110101'
    let _areaString = '北京市 北京市 东城区'
    const areaCode = ref('')

    const selectAreaChange = e => {
      const values = e.detail.values
      console.log(values)
      _areaCode = values[2].code
      _areaString = values.map(i => i.name).join(' ')
    }

    const selectAreaConfirm = () => {
      areaCode.value = _areaCode
      location.value = _areaString
      showLocationPopup.value = false
    }

    const getData = () => {
      return {
        customer_id: basicData.customer.id,
        area_code: +areaCode.value,
        location: location.value,
        address: address.value,
        user_name: user_name.value,
        phone_number: phone_number.value,
        is_default: isDefault.value
      }
    }

    const createAddress = async () => {
      mpx.showLoading({ title: '创建中' })
      const data = getData()
      await customerAddressApi.create(data)
    }

    const updateAddress = async () => {
      mpx.showLoading({ title: '更新中' })
      const data = getData()
      await customerAddressApi.update(currentAddressId, data)
    }

    const onSubmit = async () => {
      if (currentAddressId) {
        await updateAddress()
      } else {
        await createAddress()
      }
      await basicData.getAddressList()
      mpx.hideLoading()
      mpx.navigateBack()
    }
    const navBarTitle = ref('')
    const initEditData = id => {
      currentAddressId = id
      const data = basicData.addressList.find(i => i.id === id)
      user_name.value = data.user_name
      phone_number.value = data.phone_number
      address.value = data.address
      location.value = data.location
      areaCode.value = data.area_code
      isDefault.value = data.is_default
      _areaCode = data.area_code
      _areaString = data.location
    }
    onLoad(({ id }) => {
      if (id) {
        initEditData(id)
        navBarTitle.value = '编辑地址'
      } else {
        navBarTitle.value = '新增地址'
      }
    })

    return {
      navBarTitle,
      onSubmit,
      address,
      phone_number,
      user_name,
      areaCode,
      location,
      showLocationPopup,
      selectAreaChange,
      selectAreaConfirm,
      changeIsDefault,
      toggleLocationPopup,
      noDisabled,
      areaList,
      isDefault
    }
  },
  navBack() {
    mpx.navigateBack()
  }
})
</script>

<script name="json">
module.exports = {
  usingComponents:{
    "van-area": "@vant/weapp/area/index",
    "van-switch": "@vant/weapp/switch/index",
    "van-popup": "@vant/weapp/popup/index",
  }
}
</script>
