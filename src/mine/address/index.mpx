<template>
  <van-nav-bar
    title="地址管理"
    left-arrow
    bind:click-left="navBack"
  />
  <scroll-view
    class="scrollable"
    scroll-y
  >
    <van-swipe-cell wx:for="{{addressList}}" wx:key="index" right-width="{{ 130 }}">
      <view bind:tap="openAddressListPopup" class="px-4 bg-white flex flex-col gap-3">
        <view class="text-xs text-gray-600 pt-4 flex justify-between">
          <text>{{item.location}}</text>
          <text wx:if="{{item.is_default}}" class="text-red-600 font-bold">默认</text>
        </view>
        <view class="flex flex-nowrap justify-between">
          <text class="text-sm font-bold">{{item.address}}</text>
        </view>
        <view class="flex justify-between items-center pb-4 van-hairline--bottom">
          <view class="text-xs text-gray-600">
            <text>{{item.user_name}}</text>
            <text class="ml-2">{{item.phone_number}}</text>
          </view>
        </view>
      </view>
      <view slot="right" class="flex h-full items-stretch">
        <view bind:tap="editAddress(index)" class="bg-yellow-500 flex flex-col justify-center items-center" style="width:65px;">
          <van-icon name="edit" size="16" color="#fff" />
          <text class="text-xs text-white">编辑</text>
        </view>
        <view bind:tap="deleteAddress(index)" class="bg-red-500 flex flex-col justify-center items-center" style="width:65px;">
          <van-icon name="delete-o" size="16" color="#fff" />
          <text class="text-xs text-white">删除</text>
        </view>
      </view>
    </van-swipe-cell>
  </scroll-view>
  <view class="px-4 py-1 bg-white">
    <van-button bind:tap="addAddress" type="danger" block round>新增收货地址</van-button>
  </view>
</template>

<script>
import { createPage, onLoad } from '@mpxjs/core'
import { useBasicDataStore } from '@/store/base'
import { storeToRefs } from '@mpxjs/pinia'
import { customerAddressApi } from '@/api/customer'
import { showModal, navigateTo, navigateBack } from '@mpxjs/api-proxy'

createPage({
  setup() {
    const basicData = useBasicDataStore()
    const { addressList } = storeToRefs(basicData)

    onLoad(() => {
      basicData.getAddressList()
    })

    const deleteAddressConfirm = async address => {
      await customerAddressApi.remove(address.id)
      basicData.getAddressList()
    }

    const deleteAddress = index => {
      showModal({
        title: '删除地址',
        content: '请确认是否删除当前地址?',
        showCancel: true,
        success({ confirm }) {
          if (!confirm) return
          deleteAddressConfirm(addressList.value[index])
        }
      })
    }

    const editAddress = index => {
      const address = addressList.value[index]
      navigateTo({
        url: `/mine/address-add/index?id=${address.id}`
      })
    }

    return {
      editAddress,
      addressList,
      deleteAddress
    }
  },
  addAddress() {
    navigateTo({
      url: '/mine/address-add/index'
    })
  },
  navBack() {
    navigateBack()
  }
})
</script>

<script name="json">
module.exports = {
  "usingComponents":{
    "van-swipe-cell": "@vant/weapp/swipe-cell/index",
  },
}
</script>
