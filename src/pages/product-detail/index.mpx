<template>
  <van-nav-bar
    border="{{false}}"
    left-arrow
    bind:click-left="navBack"
    title-class="nav-bar-title"
  >
    <view
      slot="title"
      style="padding-right:{{menuButtonLeft}}px;padding-left:32px;"
    >
      商品详情
    </view>
  </van-nav-bar>
  <scroll-view
    class="scrollable"
    scroll-y
  >
  <!-- 轮播 -->
  <view style="height: 750rpx;" class="relative">
    <swiper indicator-dots class="h-full">
      <swiper-item wx:for="{{swiperList}}" wx:key="index">
        <image class="w-full h-full object-center object-cover" lazy-load="{{true}}" src="{{item.src}}" mode="aspectFill"/>
      </swiper-item>
    </swiper>
    <!-- 开售提醒 -->
    <!-- <view
      wx:if="{{!hasQuantity}}"
      class="px-2 py-1 text-xs absolute bottom-0 left-0 w-full flex items-center"
      style="background:rgba(255,255,255,.75)"
    >
      <view class="mr-2 font-bold">开启提醒,开售后立即通知您</view>
      <van-button type="danger" size="mini" round>开启提醒</van-button>
    </view> -->
  </view>

  <!-- 商品信息 -->
  <view class="m-2 py-3 px-2 bg-white rounded-md">
    <view class="flex items-center justify-between">
      <view class="flex items-center">
        <view class="flex text-red-600 items-center">
          <text class="text-xs font-bold pt-2px">￥</text>
          <text class="text-lg font-bold">{{productPrice / 100}}</text>
          <text class="text-xs pt-2px ml-2px"> 起</text>
        </view>
        <!-- <view class="text-gray-600 line-through text-xs ml-1">￥59起</view> -->
      </view>
      <view class="text-gray-600" style="font-size:12px;">
        <view wx:if="{{hasQuantity}}">
          剩余 {{productInfo.inventory.quantity - 0}}
          <!-- <view wx:if="{{productInfo.inventory.quantity < 10}}">剩余 {{productInfo.inventory.quantity - 0}}</view>
          <view wx:else></view> -->
        </view>
        <view wx:else>已售罄</view>
      </view>
    </view>
    <view class="flex text-sm font-bold mt-2">
      {{productInfo.title}}
    </view>
    <view class="text-xs text-gray-600 mt-1">
      {{productInfo.sub_title}}
    </view>
  </view>

  <!-- 规格/地址/运费 -->
  <view class="m-2 bg-white rounded-md overflow-hidden">
    <!-- 规格 -->
    <view wx:if="{{guides.length}}" class="flex flex-nowrap items-center p-3">
      <view class="text-xs text-gray-600 mr-3">选择</view>
      <view bind:tap="openGuideModel('')" class="flex-1 flex flex-nowrap justify-between items-center">
        <view class="text-black text-xs font-bold">商品规格</view>
        <van-icon name="arrow" size="14"/>
      </view>
    </view>
    <!-- 地址 -->
    <view class="flex flex-nowrap items-center p-3">
      <view class="text-xs text-gray-600 mr-3">送至</view>
      <view bind:tap="openAddressListPopup" class="flex-1 flex flex-nowrap justify-between items-center">
        <view class="text-black text-xs font-bold">{{ currentAddress ? currentAddress.location : '请选择地址'}}</view>
        <van-icon name="arrow" size="14"/>
      </view>
    </view>
    <!-- 运费 -->
    <view class="flex flex-nowrap items-center p-3">
      <view class="text-xs text-gray-600 mr-3">运费</view>
      <view class="flex-1 flex flex-nowrap justify-between items-center">
        <view wx:if="{{productInfo.freight}}" class="text-black text-xs font-bold">￥{{productInfo.freight / 100}}起</view>
        <view wx:else class="text-black text-xs font-bold">免运费</view>
      </view>
    </view>
    <!-- 提示 -->
    <!-- <view class=" px-4 py-3 bg-slate-200 flex items-center">
      <van-icon name="close" size="14" />
      <text class="ml-1 text-xs text-gray-600">不支持7天无理由退货</text>
    </view> -->
  </view>

  <!-- 食谱 -->
   <recipes-block></recipes-block>

  <!-- 商品详情 -->
  <view class="m-2 rounded-md bg-white p-2">
    <view class="flex items-center">
      <view class="mr-2" style="background:linear-gradient(to top, rgb(255, 96, 52), rgb(238, 10, 36));width:2px;height:14px;"></view>
      <text class="text-xs font-bold">商品详情</text>
    </view>
    <view class="mt-2" style="min-height:300px;">
      <editor
        read-only
        style="height:auto;"
        class=""
        wx:ref="editor"
      ></editor>
    </view>
  </view>
  <view class="h-1"></view>
</scroll-view>
<van-goods-action class="z-10">
  <van-goods-action-icon bind:tap="navToHome" icon="wap-home-o" text="首页" />
  <van-goods-action-icon bind:tap="navToShopingCart" icon="cart-o" text="购物车" />
  <block wx:if="{{hasQuantity}}">
    <van-goods-action-button
      text="加入购物车"
      type="warning"
      bind:click="openGuideModel('cart')"
    />
    <van-goods-action-button
      text="立即购买"
      bind:click="openGuideModel('buy')"
      disabled="{{!hasQuantity}}"
    />
  </block>
  <van-goods-action-button
    wx:else
    text="开售提醒"
    type="warning"
  />
</van-goods-action>
<view style="height:50px;"></view>
<view class="safe-area-inset-bottom"></view>

<!-- 选择规格/数量 -->
<van-popup
  show="{{ showGuideModel }}"
  position="bottom"
  round
  z-index="110"
  custom-style="max-height: 60%"
  bind:close="closeGuideModel"
>
  <!-- 规格 -->
  <view class="px-4 py-3">
    <view class="mt-3" wx:for="{{guides}}" wx:key="id" wx:for-item="guide">
      <view class="text-sm font-bold">{{guide.title}}</view>
      <view class="mt-2 px-2 flex flex-wrap gap-3">
        <view
          class="{{item.checked ? 'bg-red-600 text-white' : 'bg-slate-100 text-black'}} rounded-full font-bold px-4 py-1 text-xs"
          wx:for="{{guide.children}}"
          wx:key="id"
          bind:tap="selectGuide(guide.id,item.id)"
        >{{item.title}}</view>
      </view>
    </view>
  </view>
  <!-- 数量 -->
  <view class="flex flex-nowrap justify-between p-4">
    <view class="text-xs font-bold">数量</view>
    <i-stepper
      value="{{number}}"
      bind:plus="onPlus"
      bind:minus="onMinus"
    ></i-stepper>
  </view>
  <van-goods-action custom-class="px-2 z-10">
    <van-goods-action-button
      wx:if="{{!popupActionType || popupActionType==='cart'}}"
      text="加入购物车"
      type="warning"
      bind:click="addToShopingCart"
    />
    <van-goods-action-button
      wx:if="{{!popupActionType || popupActionType==='buy'}}"
      text="立即购买"
      bind:click="clickBuyNow"
    />
  </van-goods-action>
  <view style="height:50px;"></view>
  <view class="safe-area-inset-bottom"></view>
</van-popup>
<select-address show="{{showAddressList}}" bind:close="closeAddressListPopup"></select-address>
</template>

<script>
import { createPage } from '@mpxjs/core'
import {
  productApi
} from '@/api/product'
import { mallCartApi } from '@/api/mall'
import { ASSET_BASE_URL } from '@/config/index'
import { useBasicDataStore } from '@/store/base'
import { mapActions, mapState } from '@mpxjs/pinia'
import {
  switchTab,
  showToast,
  navigateBack,
  navigateTo
} from '@mpxjs/api-proxy'

createPage({
  data: {
    productInfo: [],
    guides: [],
    swiperList: [],
    showGuideModel: false,
    showAddressList: false,
    popupActionType: '', // 操作类型
    number: 1, // 购买数量
    hasQuantity: true, // 是否有库存
    productPrice: 0 // 商品价格
    // mine_price: 0, // 最低价格
    // max_price: 0 // 最高价格
  },
  computed: {
    ...mapState(useBasicDataStore, ['menuRect', 'windowInfo', 'currentAddress', 'customer']),
    menuButtonLeft() {
      return this.windowInfo.windowWidth - this.menuRect.left
    }
  },
  onLoad(opts) {
    this.findData(opts.id)
  },
  ...mapActions(useBasicDataStore, ['getCustomerInfo']),
  onPlus() {
    this.number++
  },
  onMinus() {
    this.number--
  },
  openGuideModel(type) {
    this.popupActionType = type
    this.showGuideModel = true
  },
  closeGuideModel() {
    this.showGuideModel = false
  },
  // 组装商品规格
  getProductGuides() {
    const guideArr = []
    this.guides.forEach(guide => {
      guide.children.forEach(i => {
        if (i.checked) {
          guideArr.push(i)
        }
      })
    })
    guideArr.sort((a, b) => Date.parse(a.created_at) - Date.parse(b.created_at))
    const guideTitles = guideArr.map(i => i.title)
    return guideTitles.length ? guideTitles.join('/') : undefined
  },
  // 添加到购物车

  async addToShopingCart() {
    if (!this.customer.id) {
      await this.getCustomerInfo()
    }
    const data = {
      customer_id: this.customer.id,
      product_id: this.productInfo.id,
      number: this.number,
      unit_price: this.productInfo.retail_price,
      title: this.productInfo.title,
      guides: this.getProductGuides()
    }
    await mallCartApi.create(data)
    showToast({
      title: '添加成功',
      icon: 'success'
    })
    this.closeGuideModel()
  },
  // 查询商品规格
  initGuides(data) {
    data.forEach(guide => {
      guide.children.forEach((item, index) => {
        item.checked = index === 0
      })
    })
    this.guides = data
  },
  // 选择规格
  selectGuide(guideId, itemId) {
    const guides = JSON.parse(JSON.stringify(this.guides))
    guides.forEach(guide => {
      if (guide.id === guideId) {
        guide.children.forEach(i => {
          i.checked = i.id === itemId
        })
      }
    })
    this.guides = guides
  },
  // 设置商品详情
  setEditorContent(delta) {
    const editor = this.$refs.editor
    editor.context(({ context }) => {
      console.log({ context })
      delta.forEach(item => {
        item.attributes = item.attributes || {}
        item.attributes.backgroundColor = item.attributes.background
        item.attributes.wordBreak = 'break-all'
        item.attributes.wordWrap = 'break-word'
        item.attributes.whiteSpace = 'normal'
        item.attributes.overflowWrap = 'break-word'
        if (typeof item.insert === 'object' && item.insert.image) {
          item.attributes.width = '100%'
        }
      })
      context.setContents({
        delta,
        success(success) {
          console.log({ success })
        },
        fail(fail) {
          console.log({ fail })
        }
      })
    }).exec()
  },
  // 初始化数据
  async findData(id) {
    const res = await productApi.findOne(id)
    const head_imgs = res.head_imgs ? JSON.parse(res.head_imgs) : []
    head_imgs.forEach(i => {
      i.src = ASSET_BASE_URL + i.url
    })
    this.swiperList = head_imgs
    this.productInfo = res
    this.productPrice = res.retail_price
    // this.mine_price = res.mine_price
    // this.max_price = res.max_price
    if (!res.inventory || res.inventory.quantity < 1) {
      this.hasQuantity = false
    }
    console.log('initData', { res })
    this.initGuides(res.guides)
    const detail = res.detail ? JSON.parse(res.detail) : []
    if (detail.length) {
      this.setEditorContent(detail)
    }
  },
  // 立即购买
  clickBuyNow() {
    const data = [{
      ...this.productInfo,
      number: this.number,
      guides: this.getProductGuides()
    }]
    navigateTo({
      url: '/pages/payment/index',
      success(e) {
        e.eventChannel.emit('data', data)
      }
    })
    this.closeGuideModel()
  },
  selectGuideConfirm() {},
  navBack() {
    navigateBack()
  },
  navToHome() {
    switchTab({
      url: '/pages/home/index'
    })
  },
  navToShopingCart() {
    switchTab({
      url: '/pages/cart/index'
    })
  },
  openAddressListPopup() {
    this.showAddressList = true
  },
  closeAddressListPopup() {
    this.showAddressList = false
  }
})
</script>

<style>
.nav-bar-title{
  max-width: 100% !important;
}
.van-nav-bar__left{
  z-index: 10;
}

</style>

<script name="json">
module.exports = {
  "usingComponents": {
    "van-goods-action": "@vant/weapp/goods-action/index",
    "van-goods-action-icon": "@vant/weapp/goods-action-icon/index",
    "van-goods-action-button": "@vant/weapp/goods-action-button/index",
    "van-popup": "@vant/weapp/popup/index",
    "i-stepper":"@/components/stepper/index",
    "select-address":"@/components/select-address/index",
    "recipes-block":"./recipes-block"
  }
}
</script>
